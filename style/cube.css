
:root {
    --green-color: rgb(0, 255, 0);
    --green-size: 240px;
    --violet-color: rgb(183, 0, 255);
    --violet-size: 120px;
    --red-color: rgb(255, 0, 0);
    --red-size: 160px;
}
#cubes {
    background-color: #050505;
}
.cube {
    position: absolute;
    width: 100%;
}
.cube__wrap {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
}
.cube--green {
    top: 30%;
    left: 15%;
    width: var(--green-size);
    height: var(--green-size);
    transform-style: preserve-3d;
    animation: cube-rotate 5s linear infinite;
}
.cube--violet {
    top: 15%;
    right: 35%;
    width: var(--violet-size);
    height: var(--violet-size);
    transform-style: preserve-3d;
    animation: cube-rotate 3s linear infinite;
}
.cube--red {
    bottom: 25%;
    right: 15%;
    width: var(--red-size);
    height: var(--red-size);
    transform-style: preserve-3d;
    animation: cube-rotate 4s linear infinite;
}
@keyframes cube-rotate {
    0% {
        transform: rotateX(-30deg) rotateY(0);
    }
    100% {
        transform: rotateX(-30deg) rotateY(360deg);
    }
}
.surface {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.cube--green .surface {
    background: linear-gradient(#222222, var(--green-color));
    transform: rotateY(calc(90deg * var(--i))) translateZ(calc(var(--green-size)/2));
}
.cube--violet .surface {
    background: linear-gradient(#222222, var(--violet-color));
    transform: rotateY(calc(90deg * var(--i))) translateZ(calc(var(--violet-size)/2));
}
.cube--red .surface {
    background: linear-gradient(#222222, var(--red-color));
    transform: rotateY(calc(90deg * var(--i))) translateZ(calc(var(--red-size)/2));
}
.cube .top {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #222222;
    transform-style: preserve-3d;
}
.cube--green .top {
    transform: rotateX(90deg) translateZ(calc(var(--green-size)/2));
}
.cube--violet .top {
    transform: rotateX(90deg) translateZ(calc(var(--violet-size)/2));
}
.cube--red .top {
    transform: rotateX(90deg) translateZ(calc(var(--red-size)/2));
}
.top::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.cube--green .top::before {
    transform: translateZ(calc(var(--green-size) * -1.3));
    filter: blur(calc(var(--green-size) / 10)) brightness(60%);
    background-color: var(--green-color);
    box-shadow: 0 0 calc(var(--green-size) * 0.5) rgba(0, 255, 0, 0.2),
    0 0 calc(var(--green-size) * 1) rgba(0, 255, 0, 0.4),
    0 0 calc(var(--green-size) * 1.5) rgba(0, 255, 0, 0.6),
    0 0 calc(var(--green-size) * 2) rgba(0, 255, 0, 0.8),
    0 0 calc(var(--green-size) * 2.5) rgba(0, 255, 0, 1);
}
.cube--violet .top::before {
    transform: translateZ(calc(var(--violet-size) * -1.3));
    filter: blur(calc(var(--violet-size) / 10)) brightness(60%);
    background-color: var(--violet-color);
    box-shadow: 0 0 calc(var(--violet-size) * 0.5) rgba(183, 0, 255, 0.2),
    0 0 calc(var(--violet-size) * 1) rgba(183, 0, 255, 0.4),
    0 0 calc(var(--violet-size) * 1.5) rgba(183, 0, 255, 0.6),
    0 0 calc(var(--violet-size) * 2) rgba(183, 0, 255, 0.8),
    0 0 calc(var(--violet-size) * 2.5) rgba(183, 0, 255, 1);
}
.cube--red .top::before {
    transform: translateZ(calc(var(--red-size) * -1.3));
    filter: blur(calc(var(--red-size) / 10)) brightness(60%);
    background-color: var(--red-color);
    box-shadow: 0 0 calc(var(--red-size) * 0.5) rgba(255, 0, 0, 0.2),
    0 0 calc(var(--red-size) * 1) rgba(255, 0, 0, 0.4),
    0 0 calc(var(--red-size) * 1.5) rgba(255, 0, 0, 0.6),
    0 0 calc(var(--red-size) * 2) rgba(255, 0, 0, 0.8),
    0 0 calc(var(--red-size) * 2.5) rgba(255, 0, 0, 1);
}